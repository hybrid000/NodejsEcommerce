<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <style>
        /* General styles */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        .popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #fff;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            z-index: 1000;
            width: 90%;
            max-width: 400px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        .popup h2 {
            font-size: 1.2em;
            margin-bottom: 20px;
        }

        .popup label {
            display: block;
            margin-bottom: 10px;
        }

        .popup input[type="text"],
        .popup input[type="number"],
        .popup input[type="tel"] {
            width: calc(100% - 20px);
            padding: 8px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

        .popup button {
            padding: 10px 20px;
            background-color: transparent;
            color: #00BFFF;
            /* Light blue color */
            border: none;
            border-radius: 3px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .popup button:hover {
            background-color: rgba(0, 0, 255, 0.1);
            /* Light blue with transparency */
        }

        .back-button {
            position: absolute;
            top: 10px;
            left: 10px;
            background-color: transparent;
            padding: 5px 10px;
            border: none;
            border-radius: 3px;
            cursor: pointer;
            color: #00BFFF;
            /* Light blue color */
            transition: background-color 0.3s;
        }

        .back-button:hover {
            background-color: rgba(0, 0, 255, 0.1);
            /* Light blue with transparency */
        }
    </style>
</head>

<body>

    <!-- Quantity Selection Popup -->
    <div id="quantityPopup" class="popup">
        <h2>Quantity Selection</h2>

        <form id="quantityForm">
            <div class="quantity-control">
                <label for="number">Set Quantity</label>
                <% products.forEach(cartItem=> { %>
                    <p>
                        <%= cartItem.product.productName %>
                    </p>
                    <button class="quantity-btn" data-action="decrement"
                        data-product-id="<%= cartItem.product._id %>">-</button>
                    <input type="number" name="quantity" id="quantity_<%= cartItem.product._id %>"
                        value="<%= cartItem.quantity %>" readonly>
                    <button class="quantity-btn" data-action="increment"
                        data-product-id="<%= cartItem.product._id %>">+</button>
                    <% }) %>
            </div>
            <button type="button" onclick="proceedToAddress()">Proceed</button>
        </form>
    </div>

    <!-- Address Entry Popup -->
    <div id="addressPopup" class="popup">
        <h2>Address Entry</h2>
        <form id="addressForm">
            <label for="streetOne">Street Address 1:</label>
            <input type="text" id="streetOne" name="streetOne" required>
            <label for="streetTwo">Street Address 2:</label>
            <input type="text" id="streetTwo" name="streetTwo">
            <label for="city">City:</label>
            <input type="text" id="city" name="city" required>
            <label for="state">State:</label>
            <input type="text" id="state" name="state" required>
            <label for="pincode">Pincode:</label>
            <input type="number" id="pincode" name="pincode" required>
            <label for="contactNumber">Contact Number:</label>
            <input type="tel" id="contactNumber" name="contactNumber" required>
            <label for="altContactNumber">Alternate Contact Number:</label>
            <input type="tel" id="altContactNumber" name="altContactNumber">
            <button type="button" onclick="goBackToQuantity()" class="back-button">
                << Go Back</button>
                    <button type="button" onclick="proceedToPayment()">Proceed</button>
        </form>
    </div>

    <!-- Payment Method Selection Popup -->
    <div id="paymentPopup" class="popup">
        <h2>Payment Method</h2>
        <form id="paymentForm" data-products="<%=JSON.stringify(products)%>">
            <input type="radio" id="payOnline" name="paymentMethod" value="payOnline">
            <label for="payOnline">Pay Online</label><br>
            <input type="radio" id="cashOnDelivery" name="paymentMethod" value="cashOnDelivery">
            <label for="cashOnDelivery">Cash on Delivery</label><br><br>
            <button type="submit">Complete Purchase</button>
            <button type="button" onclick="goBackToAddress()" class="back-button">
                << Go Back</button>
        </form>
    </div>

   <script>
    document.getElementById('paymentForm').addEventListener('submit', async function (event) {
        event.preventDefault(); // Prevent default form submission
        const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
        const productsTobuy = JSON.parse(this.getAttribute('data-products')); // Parse the JSON string to convert it into an array
        let streetOne = document.getElementById("streetOne").value;
        let streetTwo = document.getElementById("streetTwo").value;
        let city = document.getElementById("city").value;
        let state = document.getElementById("state").value;
        let pincode = document.getElementById("pincode").value;
        let contactNumber = document.getElementById("contactNumber").value;
        let altContactNumber = document.getElementById("altContactNumber").value;

        const addressData = {
            streetOne: streetOne,
            streetTwo: streetTwo,
            city: city,
            state: state,
            pincode: pincode,
            contactNumber: contactNumber,
            altContactNumber: altContactNumber
        };

       
        try {
            // Send address data to the server
            const response = await fetch("/order", {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ address: addressData, products: productsTobuy, paymentMethod: selectedPaymentMethod }),
            });

            if (response.ok) {
                const data = await response.json();
                console.log(data.message);
                proceedToPayment();
            } else {
                console.error('Error:', response.statusText);
            }
        } catch (error) {
            console.error('Error:', error);
        }
    });

</script>

    <script>
        document.querySelectorAll('.quantity-btn').forEach(button => {
            button.addEventListener('click', async function () {
                const action = this.getAttribute('data-action');
                const productId = this.getAttribute('data-product-id');
                const quantityInput = document.getElementById(`quantity_${productId}`);

                let newQuantity = parseInt(quantityInput.value);

                if (action === 'increment') {
                    newQuantity += 1;
                } else if (action === 'decrement' && newQuantity > 1) {
                    newQuantity -= 1;
                }

                quantityInput.value = newQuantity;

                // Make an asynchronous request to update the quantity in the database
                const response = await fetch(`/user/updatecart/${productId}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ quantity: newQuantity }),
                });

                if (response.ok) {
                    const data = await response.json();
                    // Update the displayed total price based on the server's response
                    document.querySelector('.total h2').textContent = `Total Amount: ${data.totalPrice}`;
                } else {
                    // Handle errors or show an appropriate message to the user
                    console.error('Error updating quantity:', response.statusText);
                }
            });
        });
    </script>

    <script>
        // Show the quantity selection popup initially
        document.getElementById('quantityPopup').style.display = 'block';

        function proceedToAddress() {
            document.getElementById('quantityPopup').style.display = 'none';
            document.getElementById('addressPopup').style.display = 'block';
        }

        function proceedToPayment() {
            document.getElementById('addressPopup').style.display = 'none';
            document.getElementById('paymentPopup').style.display = 'block';
        }

        function goBackToQuantity() {
            document.getElementById('addressPopup').style.display = 'none';
            document.getElementById('quantityPopup').style.display = 'block';
        }

        function goBackToAddress() {
            document.getElementById('paymentPopup').style.display = 'none';
            document.getElementById('addressPopup').style.display = 'block';
        }

        function goBackToProductPage() {
            // Add your logic here to redirect to the product page
            alert('Redirecting to product page...');
        }

        // Form submission handling

    </script>

</body>

</html>